{
  "name": "@microgamma/datagator",
  "version": "1.10.23",
  "description": "syntactic sugar for mongodb",
  "author": {
    "email": "cavaliere.davide@gmail.com",
    "name": "Davide Cavaliere",
    "url": "www.dcsoftware.io"
  },
  "homepage": "https://github.com/davidecavaliere/-microgamma/tree/master/packages/datagator",
  "license": "MIT",
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "module": "lib/index.js",
  "keywords": [
    "mongodb",
    "dynamodb",
    "decorator",
    "orm"
  ],
  "scripts": {
    "info": "npm-scripts-info",
    "build": "run-s clean && run-p build:*",
    "build:main": "tsc -p tsconfig.json",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:tslint": "tslint --fix --project .",
    "start:dynamodb": "node ../../scripts/start-dynamodb-local.js",
    "test": "start-server-and-test start:dynamodb http://localhost:8080/shell 'jest --coverage'",
    "test:unit": "start-server-and-test start:dynamodb http://localhost:8080/shell 'jest'",
    "test:watch": "start-server-and-test start:dynamodb http://localhost:8080/shell 'jest --watch'",
    "test:lint": "tslint --project . ",
    "cov:send": "jest --coverage && codecov -F datagator",
    "doc": "run-s doc:html && opn build/docs/index.html",
    "doc:html": "typedoc src/ --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "trash lib",
    "all": "run-s reset test cov:check doc:html",
    "prepare-release": "run-s all version doc:publish"
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "changelog": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "engines": {
    "node": ">=8.9"
  },
  "dependencies": {
    "@microgamma/loggator": ">=1.10",
    "@types/mongodb": "^3.1.18",
    "mongodb": "^3.1.10",
    "reflect-metadata": "^0.1.12"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "jest": {
    "roots": [
      "<rootDir>/src"
    ],
    "transform": {
      "^.+\\.ts?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.ts?$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "moduleNameMapper": {
      "@(microgamma/)(.*)$": "<rootDir>/../$2/src"
    },
    "reporters": [
      "default"
    ],
    "coverageReporters": [
      "json",
      "html"
    ],
    "collectCoverageFrom": [
      "**/*.ts",
      "!**/index.ts"
    ],
    "coverageDirectory": "./coverage/"
  }
}
